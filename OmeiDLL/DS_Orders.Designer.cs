//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.Omei.DLL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_Orders")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_Orders : global::System.Data.DataSet {
        
        private ordersDetailDataTable tableordersDetail;
        
        private NotSeatsOrdersDataTable tableNotSeatsOrders;
        
        private OrderPriceDataTable tableOrderPrice;
        
        private OrdersDataTable tableOrders;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_Orders() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_Orders(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ordersDetail"] != null)) {
                    base.Tables.Add(new ordersDetailDataTable(ds.Tables["ordersDetail"]));
                }
                if ((ds.Tables["NotSeatsOrders"] != null)) {
                    base.Tables.Add(new NotSeatsOrdersDataTable(ds.Tables["NotSeatsOrders"]));
                }
                if ((ds.Tables["OrderPrice"] != null)) {
                    base.Tables.Add(new OrderPriceDataTable(ds.Tables["OrderPrice"]));
                }
                if ((ds.Tables["Orders"] != null)) {
                    base.Tables.Add(new OrdersDataTable(ds.Tables["Orders"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ordersDetailDataTable ordersDetail {
            get {
                return this.tableordersDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NotSeatsOrdersDataTable NotSeatsOrders {
            get {
                return this.tableNotSeatsOrders;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrderPriceDataTable OrderPrice {
            get {
                return this.tableOrderPrice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrdersDataTable Orders {
            get {
                return this.tableOrders;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_Orders cln = ((DS_Orders)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ordersDetail"] != null)) {
                    base.Tables.Add(new ordersDetailDataTable(ds.Tables["ordersDetail"]));
                }
                if ((ds.Tables["NotSeatsOrders"] != null)) {
                    base.Tables.Add(new NotSeatsOrdersDataTable(ds.Tables["NotSeatsOrders"]));
                }
                if ((ds.Tables["OrderPrice"] != null)) {
                    base.Tables.Add(new OrderPriceDataTable(ds.Tables["OrderPrice"]));
                }
                if ((ds.Tables["Orders"] != null)) {
                    base.Tables.Add(new OrdersDataTable(ds.Tables["Orders"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableordersDetail = ((ordersDetailDataTable)(base.Tables["ordersDetail"]));
            if ((initTable == true)) {
                if ((this.tableordersDetail != null)) {
                    this.tableordersDetail.InitVars();
                }
            }
            this.tableNotSeatsOrders = ((NotSeatsOrdersDataTable)(base.Tables["NotSeatsOrders"]));
            if ((initTable == true)) {
                if ((this.tableNotSeatsOrders != null)) {
                    this.tableNotSeatsOrders.InitVars();
                }
            }
            this.tableOrderPrice = ((OrderPriceDataTable)(base.Tables["OrderPrice"]));
            if ((initTable == true)) {
                if ((this.tableOrderPrice != null)) {
                    this.tableOrderPrice.InitVars();
                }
            }
            this.tableOrders = ((OrdersDataTable)(base.Tables["Orders"]));
            if ((initTable == true)) {
                if ((this.tableOrders != null)) {
                    this.tableOrders.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_Orders";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_Orders.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableordersDetail = new ordersDetailDataTable();
            base.Tables.Add(this.tableordersDetail);
            this.tableNotSeatsOrders = new NotSeatsOrdersDataTable();
            base.Tables.Add(this.tableNotSeatsOrders);
            this.tableOrderPrice = new OrderPriceDataTable();
            base.Tables.Add(this.tableOrderPrice);
            this.tableOrders = new OrdersDataTable();
            base.Tables.Add(this.tableOrders);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeordersDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNotSeatsOrders() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrderPrice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrders() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_Orders ds = new DS_Orders();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ordersDetailRowChangeEventHandler(object sender, ordersDetailRowChangeEvent e);
        
        public delegate void NotSeatsOrdersRowChangeEventHandler(object sender, NotSeatsOrdersRowChangeEvent e);
        
        public delegate void OrderPriceRowChangeEventHandler(object sender, OrderPriceRowChangeEvent e);
        
        public delegate void OrdersRowChangeEventHandler(object sender, OrdersRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ordersDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnorderId;
            
            private global::System.Data.DataColumn columnscheduleId;
            
            private global::System.Data.DataColumn columnpickup;
            
            private global::System.Data.DataColumn columnnumberAdult;
            
            private global::System.Data.DataColumn columnnumberChild;
            
            private global::System.Data.DataColumn columnpriceAdult;
            
            private global::System.Data.DataColumn columnpriceChild;
            
            private global::System.Data.DataColumn columnbookRooms;
            
            private global::System.Data.DataColumn columndiscount;
            
            private global::System.Data.DataColumn columnpay;
            
            private global::System.Data.DataColumn columnactualAmount;
            
            private global::System.Data.DataColumn columnfirstName;
            
            private global::System.Data.DataColumn columnlastName;
            
            private global::System.Data.DataColumn columncontactPhone;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnmiscCharge;
            
            private global::System.Data.DataColumn columnsuggestAmount;
            
            private global::System.Data.DataColumn columnsubTitle;
            
            private global::System.Data.DataColumn columnstartDate;
            
            private global::System.Data.DataColumn columnTourName;
            
            private global::System.Data.DataColumn columnTourName_cn;
            
            private global::System.Data.DataColumn columnmemberId;
            
            private global::System.Data.DataColumn columnbalance;
            
            private global::System.Data.DataColumn columnfare;
            
            private global::System.Data.DataColumn columnnumberFree;
            
            private global::System.Data.DataColumn columnroomShare;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnagentId;
            
            private global::System.Data.DataColumn columncompanyName;
            
            private global::System.Data.DataColumn columnfareAdult;
            
            private global::System.Data.DataColumn columnfareChild;
            
            private global::System.Data.DataColumn columnserviceFee;
            
            private global::System.Data.DataColumn columnempId;
            
            private global::System.Data.DataColumn columnnotes;
            
            private global::System.Data.DataColumn columnTourDay;
            
            private global::System.Data.DataColumn columnisFloatPrice;
            
            private global::System.Data.DataColumn columnnickname;
            
            private global::System.Data.DataColumn columnorderDate;
            
            private global::System.Data.DataColumn columnagentInv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ordersDetailDataTable() {
                this.TableName = "ordersDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ordersDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ordersDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn orderIdColumn {
                get {
                    return this.columnorderId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scheduleIdColumn {
                get {
                    return this.columnscheduleId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pickupColumn {
                get {
                    return this.columnpickup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberAdultColumn {
                get {
                    return this.columnnumberAdult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberChildColumn {
                get {
                    return this.columnnumberChild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceAdultColumn {
                get {
                    return this.columnpriceAdult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceChildColumn {
                get {
                    return this.columnpriceChild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bookRoomsColumn {
                get {
                    return this.columnbookRooms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn discountColumn {
                get {
                    return this.columndiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn payColumn {
                get {
                    return this.columnpay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn actualAmountColumn {
                get {
                    return this.columnactualAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn firstNameColumn {
                get {
                    return this.columnfirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lastNameColumn {
                get {
                    return this.columnlastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactPhoneColumn {
                get {
                    return this.columncontactPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn miscChargeColumn {
                get {
                    return this.columnmiscCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn suggestAmountColumn {
                get {
                    return this.columnsuggestAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subTitleColumn {
                get {
                    return this.columnsubTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn startDateColumn {
                get {
                    return this.columnstartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TourNameColumn {
                get {
                    return this.columnTourName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TourName_cnColumn {
                get {
                    return this.columnTourName_cn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn memberIdColumn {
                get {
                    return this.columnmemberId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn balanceColumn {
                get {
                    return this.columnbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fareColumn {
                get {
                    return this.columnfare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberFreeColumn {
                get {
                    return this.columnnumberFree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn roomShareColumn {
                get {
                    return this.columnroomShare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agentIdColumn {
                get {
                    return this.columnagentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn companyNameColumn {
                get {
                    return this.columncompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fareAdultColumn {
                get {
                    return this.columnfareAdult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fareChildColumn {
                get {
                    return this.columnfareChild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn serviceFeeColumn {
                get {
                    return this.columnserviceFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empIdColumn {
                get {
                    return this.columnempId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TourDayColumn {
                get {
                    return this.columnTourDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isFloatPriceColumn {
                get {
                    return this.columnisFloatPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nicknameColumn {
                get {
                    return this.columnnickname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn orderDateColumn {
                get {
                    return this.columnorderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agentInvColumn {
                get {
                    return this.columnagentInv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ordersDetailRow this[int index] {
                get {
                    return ((ordersDetailRow)(this.Rows[index]));
                }
            }
            
            public event ordersDetailRowChangeEventHandler ordersDetailRowChanging;
            
            public event ordersDetailRowChangeEventHandler ordersDetailRowChanged;
            
            public event ordersDetailRowChangeEventHandler ordersDetailRowDeleting;
            
            public event ordersDetailRowChangeEventHandler ordersDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddordersDetailRow(ordersDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ordersDetailRow AddordersDetailRow(
                        int scheduleId, 
                        string pickup, 
                        int numberAdult, 
                        int numberChild, 
                        decimal priceAdult, 
                        decimal priceChild, 
                        decimal bookRooms, 
                        decimal discount, 
                        decimal pay, 
                        decimal actualAmount, 
                        string firstName, 
                        string lastName, 
                        string contactPhone, 
                        string email, 
                        decimal miscCharge, 
                        decimal suggestAmount, 
                        string subTitle, 
                        System.DateTime startDate, 
                        string TourName, 
                        string TourName_cn, 
                        int memberId, 
                        decimal balance, 
                        decimal fare, 
                        int numberFree, 
                        string roomShare, 
                        byte status, 
                        string remark, 
                        int agentId, 
                        string companyName, 
                        decimal fareAdult, 
                        decimal fareChild, 
                        decimal serviceFee, 
                        int empId, 
                        string notes, 
                        byte TourDay, 
                        bool isFloatPrice, 
                        string nickname, 
                        System.DateTime orderDate, 
                        string agentInv) {
                ordersDetailRow rowordersDetailRow = ((ordersDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        scheduleId,
                        pickup,
                        numberAdult,
                        numberChild,
                        priceAdult,
                        priceChild,
                        bookRooms,
                        discount,
                        pay,
                        actualAmount,
                        firstName,
                        lastName,
                        contactPhone,
                        email,
                        miscCharge,
                        suggestAmount,
                        subTitle,
                        startDate,
                        TourName,
                        TourName_cn,
                        memberId,
                        balance,
                        fare,
                        numberFree,
                        roomShare,
                        status,
                        remark,
                        agentId,
                        companyName,
                        fareAdult,
                        fareChild,
                        serviceFee,
                        empId,
                        notes,
                        TourDay,
                        isFloatPrice,
                        nickname,
                        orderDate,
                        agentInv};
                rowordersDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowordersDetailRow);
                return rowordersDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ordersDetailRow FindByorderId(int orderId) {
                return ((ordersDetailRow)(this.Rows.Find(new object[] {
                            orderId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ordersDetailDataTable cln = ((ordersDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ordersDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnorderId = base.Columns["orderId"];
                this.columnscheduleId = base.Columns["scheduleId"];
                this.columnpickup = base.Columns["pickup"];
                this.columnnumberAdult = base.Columns["numberAdult"];
                this.columnnumberChild = base.Columns["numberChild"];
                this.columnpriceAdult = base.Columns["priceAdult"];
                this.columnpriceChild = base.Columns["priceChild"];
                this.columnbookRooms = base.Columns["bookRooms"];
                this.columndiscount = base.Columns["discount"];
                this.columnpay = base.Columns["pay"];
                this.columnactualAmount = base.Columns["actualAmount"];
                this.columnfirstName = base.Columns["firstName"];
                this.columnlastName = base.Columns["lastName"];
                this.columncontactPhone = base.Columns["contactPhone"];
                this.columnemail = base.Columns["email"];
                this.columnmiscCharge = base.Columns["miscCharge"];
                this.columnsuggestAmount = base.Columns["suggestAmount"];
                this.columnsubTitle = base.Columns["subTitle"];
                this.columnstartDate = base.Columns["startDate"];
                this.columnTourName = base.Columns["TourName"];
                this.columnTourName_cn = base.Columns["TourName_cn"];
                this.columnmemberId = base.Columns["memberId"];
                this.columnbalance = base.Columns["balance"];
                this.columnfare = base.Columns["fare"];
                this.columnnumberFree = base.Columns["numberFree"];
                this.columnroomShare = base.Columns["roomShare"];
                this.columnstatus = base.Columns["status"];
                this.columnremark = base.Columns["remark"];
                this.columnagentId = base.Columns["agentId"];
                this.columncompanyName = base.Columns["companyName"];
                this.columnfareAdult = base.Columns["fareAdult"];
                this.columnfareChild = base.Columns["fareChild"];
                this.columnserviceFee = base.Columns["serviceFee"];
                this.columnempId = base.Columns["empId"];
                this.columnnotes = base.Columns["notes"];
                this.columnTourDay = base.Columns["TourDay"];
                this.columnisFloatPrice = base.Columns["isFloatPrice"];
                this.columnnickname = base.Columns["nickname"];
                this.columnorderDate = base.Columns["orderDate"];
                this.columnagentInv = base.Columns["agentInv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnorderId = new global::System.Data.DataColumn("orderId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderId);
                this.columnscheduleId = new global::System.Data.DataColumn("scheduleId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscheduleId);
                this.columnpickup = new global::System.Data.DataColumn("pickup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpickup);
                this.columnnumberAdult = new global::System.Data.DataColumn("numberAdult", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberAdult);
                this.columnnumberChild = new global::System.Data.DataColumn("numberChild", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberChild);
                this.columnpriceAdult = new global::System.Data.DataColumn("priceAdult", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriceAdult);
                this.columnpriceChild = new global::System.Data.DataColumn("priceChild", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriceChild);
                this.columnbookRooms = new global::System.Data.DataColumn("bookRooms", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbookRooms);
                this.columndiscount = new global::System.Data.DataColumn("discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscount);
                this.columnpay = new global::System.Data.DataColumn("pay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpay);
                this.columnactualAmount = new global::System.Data.DataColumn("actualAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactualAmount);
                this.columnfirstName = new global::System.Data.DataColumn("firstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirstName);
                this.columnlastName = new global::System.Data.DataColumn("lastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastName);
                this.columncontactPhone = new global::System.Data.DataColumn("contactPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontactPhone);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnmiscCharge = new global::System.Data.DataColumn("miscCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmiscCharge);
                this.columnsuggestAmount = new global::System.Data.DataColumn("suggestAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuggestAmount);
                this.columnsubTitle = new global::System.Data.DataColumn("subTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubTitle);
                this.columnstartDate = new global::System.Data.DataColumn("startDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartDate);
                this.columnTourName = new global::System.Data.DataColumn("TourName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTourName);
                this.columnTourName_cn = new global::System.Data.DataColumn("TourName_cn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTourName_cn);
                this.columnmemberId = new global::System.Data.DataColumn("memberId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmemberId);
                this.columnbalance = new global::System.Data.DataColumn("balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbalance);
                this.columnfare = new global::System.Data.DataColumn("fare", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfare);
                this.columnnumberFree = new global::System.Data.DataColumn("numberFree", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberFree);
                this.columnroomShare = new global::System.Data.DataColumn("roomShare", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnroomShare);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnagentId = new global::System.Data.DataColumn("agentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagentId);
                this.columncompanyName = new global::System.Data.DataColumn("companyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompanyName);
                this.columnfareAdult = new global::System.Data.DataColumn("fareAdult", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfareAdult);
                this.columnfareChild = new global::System.Data.DataColumn("fareChild", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfareChild);
                this.columnserviceFee = new global::System.Data.DataColumn("serviceFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnserviceFee);
                this.columnempId = new global::System.Data.DataColumn("empId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempId);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.columnTourDay = new global::System.Data.DataColumn("TourDay", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTourDay);
                this.columnisFloatPrice = new global::System.Data.DataColumn("isFloatPrice", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisFloatPrice);
                this.columnnickname = new global::System.Data.DataColumn("nickname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnickname);
                this.columnorderDate = new global::System.Data.DataColumn("orderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderDate);
                this.columnagentInv = new global::System.Data.DataColumn("agentInv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagentInv);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnorderId}, true));
                this.columnorderId.AutoIncrement = true;
                this.columnorderId.AllowDBNull = false;
                this.columnorderId.ReadOnly = true;
                this.columnorderId.Unique = true;
                this.columnscheduleId.AllowDBNull = false;
                this.columnpickup.AllowDBNull = false;
                this.columnpickup.MaxLength = 50;
                this.columnnumberAdult.AllowDBNull = false;
                this.columnnumberChild.AllowDBNull = false;
                this.columnpriceAdult.AllowDBNull = false;
                this.columnpriceChild.AllowDBNull = false;
                this.columnbookRooms.AllowDBNull = false;
                this.columndiscount.AllowDBNull = false;
                this.columnpay.AllowDBNull = false;
                this.columnactualAmount.AllowDBNull = false;
                this.columnfirstName.AllowDBNull = false;
                this.columnfirstName.MaxLength = 50;
                this.columnlastName.AllowDBNull = false;
                this.columnlastName.MaxLength = 50;
                this.columncontactPhone.AllowDBNull = false;
                this.columncontactPhone.MaxLength = 50;
                this.columnemail.AllowDBNull = false;
                this.columnemail.MaxLength = 200;
                this.columnmiscCharge.AllowDBNull = false;
                this.columnsuggestAmount.AllowDBNull = false;
                this.columnsubTitle.MaxLength = 200;
                this.columnTourName.MaxLength = 200;
                this.columnTourName_cn.MaxLength = 200;
                this.columnmemberId.AllowDBNull = false;
                this.columnbalance.ReadOnly = true;
                this.columnfare.AllowDBNull = false;
                this.columnnumberFree.AllowDBNull = false;
                this.columnroomShare.AllowDBNull = false;
                this.columnroomShare.MaxLength = 1;
                this.columnstatus.AllowDBNull = false;
                this.columnremark.AllowDBNull = false;
                this.columnremark.MaxLength = 500;
                this.columnagentId.AllowDBNull = false;
                this.columncompanyName.MaxLength = 200;
                this.columnfareAdult.ReadOnly = true;
                this.columnfareChild.ReadOnly = true;
                this.columnserviceFee.AllowDBNull = false;
                this.columnempId.AllowDBNull = false;
                this.columnnotes.MaxLength = 500;
                this.columnnickname.MaxLength = 200;
                this.columnagentInv.AllowDBNull = false;
                this.columnagentInv.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ordersDetailRow NewordersDetailRow() {
                return ((ordersDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ordersDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ordersDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ordersDetailRowChanged != null)) {
                    this.ordersDetailRowChanged(this, new ordersDetailRowChangeEvent(((ordersDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ordersDetailRowChanging != null)) {
                    this.ordersDetailRowChanging(this, new ordersDetailRowChangeEvent(((ordersDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ordersDetailRowDeleted != null)) {
                    this.ordersDetailRowDeleted(this, new ordersDetailRowChangeEvent(((ordersDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ordersDetailRowDeleting != null)) {
                    this.ordersDetailRowDeleting(this, new ordersDetailRowChangeEvent(((ordersDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveordersDetailRow(ordersDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_Orders ds = new DS_Orders();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ordersDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NotSeatsOrdersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnorderId;
            
            private global::System.Data.DataColumn columnusername;
            
            private global::System.Data.DataColumn columnnumberAdult;
            
            private global::System.Data.DataColumn columnnumberChild;
            
            private global::System.Data.DataColumn columnnumberFree;
            
            private global::System.Data.DataColumn columncontactPhone;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotSeatsOrdersDataTable() {
                this.TableName = "NotSeatsOrders";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NotSeatsOrdersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NotSeatsOrdersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn orderIdColumn {
                get {
                    return this.columnorderId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn usernameColumn {
                get {
                    return this.columnusername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberAdultColumn {
                get {
                    return this.columnnumberAdult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberChildColumn {
                get {
                    return this.columnnumberChild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberFreeColumn {
                get {
                    return this.columnnumberFree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactPhoneColumn {
                get {
                    return this.columncontactPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotSeatsOrdersRow this[int index] {
                get {
                    return ((NotSeatsOrdersRow)(this.Rows[index]));
                }
            }
            
            public event NotSeatsOrdersRowChangeEventHandler NotSeatsOrdersRowChanging;
            
            public event NotSeatsOrdersRowChangeEventHandler NotSeatsOrdersRowChanged;
            
            public event NotSeatsOrdersRowChangeEventHandler NotSeatsOrdersRowDeleting;
            
            public event NotSeatsOrdersRowChangeEventHandler NotSeatsOrdersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNotSeatsOrdersRow(NotSeatsOrdersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotSeatsOrdersRow AddNotSeatsOrdersRow(string username, int numberAdult, int numberChild, int numberFree, string contactPhone) {
                NotSeatsOrdersRow rowNotSeatsOrdersRow = ((NotSeatsOrdersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        username,
                        numberAdult,
                        numberChild,
                        numberFree,
                        contactPhone};
                rowNotSeatsOrdersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNotSeatsOrdersRow);
                return rowNotSeatsOrdersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotSeatsOrdersRow FindByorderId(int orderId) {
                return ((NotSeatsOrdersRow)(this.Rows.Find(new object[] {
                            orderId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                NotSeatsOrdersDataTable cln = ((NotSeatsOrdersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NotSeatsOrdersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnorderId = base.Columns["orderId"];
                this.columnusername = base.Columns["username"];
                this.columnnumberAdult = base.Columns["numberAdult"];
                this.columnnumberChild = base.Columns["numberChild"];
                this.columnnumberFree = base.Columns["numberFree"];
                this.columncontactPhone = base.Columns["contactPhone"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnorderId = new global::System.Data.DataColumn("orderId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderId);
                this.columnusername = new global::System.Data.DataColumn("username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columnnumberAdult = new global::System.Data.DataColumn("numberAdult", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberAdult);
                this.columnnumberChild = new global::System.Data.DataColumn("numberChild", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberChild);
                this.columnnumberFree = new global::System.Data.DataColumn("numberFree", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberFree);
                this.columncontactPhone = new global::System.Data.DataColumn("contactPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontactPhone);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnorderId}, true));
                this.columnorderId.AutoIncrement = true;
                this.columnorderId.AllowDBNull = false;
                this.columnorderId.ReadOnly = true;
                this.columnorderId.Unique = true;
                this.columnusername.ReadOnly = true;
                this.columnusername.MaxLength = 101;
                this.columnnumberAdult.AllowDBNull = false;
                this.columnnumberChild.AllowDBNull = false;
                this.columnnumberFree.AllowDBNull = false;
                this.columncontactPhone.AllowDBNull = false;
                this.columncontactPhone.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotSeatsOrdersRow NewNotSeatsOrdersRow() {
                return ((NotSeatsOrdersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NotSeatsOrdersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(NotSeatsOrdersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NotSeatsOrdersRowChanged != null)) {
                    this.NotSeatsOrdersRowChanged(this, new NotSeatsOrdersRowChangeEvent(((NotSeatsOrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NotSeatsOrdersRowChanging != null)) {
                    this.NotSeatsOrdersRowChanging(this, new NotSeatsOrdersRowChangeEvent(((NotSeatsOrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NotSeatsOrdersRowDeleted != null)) {
                    this.NotSeatsOrdersRowDeleted(this, new NotSeatsOrdersRowChangeEvent(((NotSeatsOrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NotSeatsOrdersRowDeleting != null)) {
                    this.NotSeatsOrdersRowDeleting(this, new NotSeatsOrdersRowChangeEvent(((NotSeatsOrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNotSeatsOrdersRow(NotSeatsOrdersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_Orders ds = new DS_Orders();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NotSeatsOrdersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrderPriceDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnorderId;
            
            private global::System.Data.DataColumn columnscheduleId;
            
            private global::System.Data.DataColumn columnpriceAdult;
            
            private global::System.Data.DataColumn columnpriceChild;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderPriceDataTable() {
                this.TableName = "OrderPrice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderPriceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrderPriceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn orderIdColumn {
                get {
                    return this.columnorderId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scheduleIdColumn {
                get {
                    return this.columnscheduleId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceAdultColumn {
                get {
                    return this.columnpriceAdult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceChildColumn {
                get {
                    return this.columnpriceChild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderPriceRow this[int index] {
                get {
                    return ((OrderPriceRow)(this.Rows[index]));
                }
            }
            
            public event OrderPriceRowChangeEventHandler OrderPriceRowChanging;
            
            public event OrderPriceRowChangeEventHandler OrderPriceRowChanged;
            
            public event OrderPriceRowChangeEventHandler OrderPriceRowDeleting;
            
            public event OrderPriceRowChangeEventHandler OrderPriceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrderPriceRow(OrderPriceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderPriceRow AddOrderPriceRow(int scheduleId, decimal priceAdult, decimal priceChild) {
                OrderPriceRow rowOrderPriceRow = ((OrderPriceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        scheduleId,
                        priceAdult,
                        priceChild};
                rowOrderPriceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrderPriceRow);
                return rowOrderPriceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderPriceRow FindByorderId(int orderId) {
                return ((OrderPriceRow)(this.Rows.Find(new object[] {
                            orderId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OrderPriceDataTable cln = ((OrderPriceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrderPriceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnorderId = base.Columns["orderId"];
                this.columnscheduleId = base.Columns["scheduleId"];
                this.columnpriceAdult = base.Columns["priceAdult"];
                this.columnpriceChild = base.Columns["priceChild"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnorderId = new global::System.Data.DataColumn("orderId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderId);
                this.columnscheduleId = new global::System.Data.DataColumn("scheduleId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscheduleId);
                this.columnpriceAdult = new global::System.Data.DataColumn("priceAdult", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriceAdult);
                this.columnpriceChild = new global::System.Data.DataColumn("priceChild", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriceChild);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnorderId}, true));
                this.columnorderId.AutoIncrement = true;
                this.columnorderId.AllowDBNull = false;
                this.columnorderId.ReadOnly = true;
                this.columnorderId.Unique = true;
                this.columnscheduleId.AllowDBNull = false;
                this.columnpriceAdult.AllowDBNull = false;
                this.columnpriceChild.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderPriceRow NewOrderPriceRow() {
                return ((OrderPriceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrderPriceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OrderPriceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrderPriceRowChanged != null)) {
                    this.OrderPriceRowChanged(this, new OrderPriceRowChangeEvent(((OrderPriceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrderPriceRowChanging != null)) {
                    this.OrderPriceRowChanging(this, new OrderPriceRowChangeEvent(((OrderPriceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrderPriceRowDeleted != null)) {
                    this.OrderPriceRowDeleted(this, new OrderPriceRowChangeEvent(((OrderPriceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrderPriceRowDeleting != null)) {
                    this.OrderPriceRowDeleting(this, new OrderPriceRowChangeEvent(((OrderPriceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrderPriceRow(OrderPriceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_Orders ds = new DS_Orders();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrderPriceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrdersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnorderId;
            
            private global::System.Data.DataColumn columnscheduleId;
            
            private global::System.Data.DataColumn columnpickup;
            
            private global::System.Data.DataColumn columnnumberAdult;
            
            private global::System.Data.DataColumn columnnumberChild;
            
            private global::System.Data.DataColumn columnnumberFree;
            
            private global::System.Data.DataColumn columnfare;
            
            private global::System.Data.DataColumn columnbookRooms;
            
            private global::System.Data.DataColumn columnroomShare;
            
            private global::System.Data.DataColumn columnactualAmount;
            
            private global::System.Data.DataColumn columnbalance;
            
            private global::System.Data.DataColumn columnempId;
            
            private global::System.Data.DataColumn columnfirstName;
            
            private global::System.Data.DataColumn columnlastName;
            
            private global::System.Data.DataColumn columncontactPhone;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnagentId;
            
            private global::System.Data.DataColumn columnnickname;
            
            private global::System.Data.DataColumn columnshortName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrdersDataTable() {
                this.TableName = "Orders";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrdersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrdersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn orderIdColumn {
                get {
                    return this.columnorderId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scheduleIdColumn {
                get {
                    return this.columnscheduleId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pickupColumn {
                get {
                    return this.columnpickup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberAdultColumn {
                get {
                    return this.columnnumberAdult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberChildColumn {
                get {
                    return this.columnnumberChild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberFreeColumn {
                get {
                    return this.columnnumberFree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fareColumn {
                get {
                    return this.columnfare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bookRoomsColumn {
                get {
                    return this.columnbookRooms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn roomShareColumn {
                get {
                    return this.columnroomShare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn actualAmountColumn {
                get {
                    return this.columnactualAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn balanceColumn {
                get {
                    return this.columnbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empIdColumn {
                get {
                    return this.columnempId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn firstNameColumn {
                get {
                    return this.columnfirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lastNameColumn {
                get {
                    return this.columnlastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactPhoneColumn {
                get {
                    return this.columncontactPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agentIdColumn {
                get {
                    return this.columnagentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nicknameColumn {
                get {
                    return this.columnnickname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shortNameColumn {
                get {
                    return this.columnshortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrdersRow this[int index] {
                get {
                    return ((OrdersRow)(this.Rows[index]));
                }
            }
            
            public event OrdersRowChangeEventHandler OrdersRowChanging;
            
            public event OrdersRowChangeEventHandler OrdersRowChanged;
            
            public event OrdersRowChangeEventHandler OrdersRowDeleting;
            
            public event OrdersRowChangeEventHandler OrdersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrdersRow(OrdersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrdersRow AddOrdersRow(
                        int scheduleId, 
                        string pickup, 
                        int numberAdult, 
                        int numberChild, 
                        int numberFree, 
                        decimal fare, 
                        decimal bookRooms, 
                        string roomShare, 
                        decimal actualAmount, 
                        decimal balance, 
                        int empId, 
                        string firstName, 
                        string lastName, 
                        string contactPhone, 
                        string email, 
                        int agentId, 
                        string nickname, 
                        string shortName) {
                OrdersRow rowOrdersRow = ((OrdersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        scheduleId,
                        pickup,
                        numberAdult,
                        numberChild,
                        numberFree,
                        fare,
                        bookRooms,
                        roomShare,
                        actualAmount,
                        balance,
                        empId,
                        firstName,
                        lastName,
                        contactPhone,
                        email,
                        agentId,
                        nickname,
                        shortName};
                rowOrdersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrdersRow);
                return rowOrdersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrdersRow FindByorderId(int orderId) {
                return ((OrdersRow)(this.Rows.Find(new object[] {
                            orderId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OrdersDataTable cln = ((OrdersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrdersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnorderId = base.Columns["orderId"];
                this.columnscheduleId = base.Columns["scheduleId"];
                this.columnpickup = base.Columns["pickup"];
                this.columnnumberAdult = base.Columns["numberAdult"];
                this.columnnumberChild = base.Columns["numberChild"];
                this.columnnumberFree = base.Columns["numberFree"];
                this.columnfare = base.Columns["fare"];
                this.columnbookRooms = base.Columns["bookRooms"];
                this.columnroomShare = base.Columns["roomShare"];
                this.columnactualAmount = base.Columns["actualAmount"];
                this.columnbalance = base.Columns["balance"];
                this.columnempId = base.Columns["empId"];
                this.columnfirstName = base.Columns["firstName"];
                this.columnlastName = base.Columns["lastName"];
                this.columncontactPhone = base.Columns["contactPhone"];
                this.columnemail = base.Columns["email"];
                this.columnagentId = base.Columns["agentId"];
                this.columnnickname = base.Columns["nickname"];
                this.columnshortName = base.Columns["shortName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnorderId = new global::System.Data.DataColumn("orderId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderId);
                this.columnscheduleId = new global::System.Data.DataColumn("scheduleId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscheduleId);
                this.columnpickup = new global::System.Data.DataColumn("pickup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpickup);
                this.columnnumberAdult = new global::System.Data.DataColumn("numberAdult", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberAdult);
                this.columnnumberChild = new global::System.Data.DataColumn("numberChild", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberChild);
                this.columnnumberFree = new global::System.Data.DataColumn("numberFree", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberFree);
                this.columnfare = new global::System.Data.DataColumn("fare", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfare);
                this.columnbookRooms = new global::System.Data.DataColumn("bookRooms", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbookRooms);
                this.columnroomShare = new global::System.Data.DataColumn("roomShare", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnroomShare);
                this.columnactualAmount = new global::System.Data.DataColumn("actualAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactualAmount);
                this.columnbalance = new global::System.Data.DataColumn("balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbalance);
                this.columnempId = new global::System.Data.DataColumn("empId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempId);
                this.columnfirstName = new global::System.Data.DataColumn("firstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirstName);
                this.columnlastName = new global::System.Data.DataColumn("lastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastName);
                this.columncontactPhone = new global::System.Data.DataColumn("contactPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontactPhone);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnagentId = new global::System.Data.DataColumn("agentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagentId);
                this.columnnickname = new global::System.Data.DataColumn("nickname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnickname);
                this.columnshortName = new global::System.Data.DataColumn("shortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshortName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnorderId}, true));
                this.columnorderId.AutoIncrement = true;
                this.columnorderId.AllowDBNull = false;
                this.columnorderId.ReadOnly = true;
                this.columnorderId.Unique = true;
                this.columnscheduleId.AllowDBNull = false;
                this.columnpickup.AllowDBNull = false;
                this.columnpickup.MaxLength = 50;
                this.columnnumberAdult.AllowDBNull = false;
                this.columnnumberChild.AllowDBNull = false;
                this.columnnumberFree.AllowDBNull = false;
                this.columnfare.AllowDBNull = false;
                this.columnbookRooms.AllowDBNull = false;
                this.columnroomShare.AllowDBNull = false;
                this.columnroomShare.MaxLength = 1;
                this.columnactualAmount.AllowDBNull = false;
                this.columnbalance.ReadOnly = true;
                this.columnempId.AllowDBNull = false;
                this.columnfirstName.AllowDBNull = false;
                this.columnfirstName.MaxLength = 50;
                this.columnlastName.AllowDBNull = false;
                this.columnlastName.MaxLength = 50;
                this.columncontactPhone.AllowDBNull = false;
                this.columncontactPhone.MaxLength = 50;
                this.columnemail.AllowDBNull = false;
                this.columnemail.MaxLength = 200;
                this.columnagentId.AllowDBNull = false;
                this.columnnickname.MaxLength = 200;
                this.columnshortName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrdersRow NewOrdersRow() {
                return ((OrdersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrdersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OrdersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrdersRowChanged != null)) {
                    this.OrdersRowChanged(this, new OrdersRowChangeEvent(((OrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrdersRowChanging != null)) {
                    this.OrdersRowChanging(this, new OrdersRowChangeEvent(((OrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrdersRowDeleted != null)) {
                    this.OrdersRowDeleted(this, new OrdersRowChangeEvent(((OrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrdersRowDeleting != null)) {
                    this.OrdersRowDeleting(this, new OrdersRowChangeEvent(((OrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrdersRow(OrdersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_Orders ds = new DS_Orders();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrdersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ordersDetailRow : global::System.Data.DataRow {
            
            private ordersDetailDataTable tableordersDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ordersDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableordersDetail = ((ordersDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int orderId {
                get {
                    return ((int)(this[this.tableordersDetail.orderIdColumn]));
                }
                set {
                    this[this.tableordersDetail.orderIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int scheduleId {
                get {
                    return ((int)(this[this.tableordersDetail.scheduleIdColumn]));
                }
                set {
                    this[this.tableordersDetail.scheduleIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pickup {
                get {
                    return ((string)(this[this.tableordersDetail.pickupColumn]));
                }
                set {
                    this[this.tableordersDetail.pickupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numberAdult {
                get {
                    return ((int)(this[this.tableordersDetail.numberAdultColumn]));
                }
                set {
                    this[this.tableordersDetail.numberAdultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numberChild {
                get {
                    return ((int)(this[this.tableordersDetail.numberChildColumn]));
                }
                set {
                    this[this.tableordersDetail.numberChildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal priceAdult {
                get {
                    return ((decimal)(this[this.tableordersDetail.priceAdultColumn]));
                }
                set {
                    this[this.tableordersDetail.priceAdultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal priceChild {
                get {
                    return ((decimal)(this[this.tableordersDetail.priceChildColumn]));
                }
                set {
                    this[this.tableordersDetail.priceChildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal bookRooms {
                get {
                    return ((decimal)(this[this.tableordersDetail.bookRoomsColumn]));
                }
                set {
                    this[this.tableordersDetail.bookRoomsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal discount {
                get {
                    return ((decimal)(this[this.tableordersDetail.discountColumn]));
                }
                set {
                    this[this.tableordersDetail.discountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pay {
                get {
                    return ((decimal)(this[this.tableordersDetail.payColumn]));
                }
                set {
                    this[this.tableordersDetail.payColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal actualAmount {
                get {
                    return ((decimal)(this[this.tableordersDetail.actualAmountColumn]));
                }
                set {
                    this[this.tableordersDetail.actualAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string firstName {
                get {
                    return ((string)(this[this.tableordersDetail.firstNameColumn]));
                }
                set {
                    this[this.tableordersDetail.firstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lastName {
                get {
                    return ((string)(this[this.tableordersDetail.lastNameColumn]));
                }
                set {
                    this[this.tableordersDetail.lastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contactPhone {
                get {
                    return ((string)(this[this.tableordersDetail.contactPhoneColumn]));
                }
                set {
                    this[this.tableordersDetail.contactPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    return ((string)(this[this.tableordersDetail.emailColumn]));
                }
                set {
                    this[this.tableordersDetail.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal miscCharge {
                get {
                    return ((decimal)(this[this.tableordersDetail.miscChargeColumn]));
                }
                set {
                    this[this.tableordersDetail.miscChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal suggestAmount {
                get {
                    return ((decimal)(this[this.tableordersDetail.suggestAmountColumn]));
                }
                set {
                    this[this.tableordersDetail.suggestAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subTitle {
                get {
                    try {
                        return ((string)(this[this.tableordersDetail.subTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subTitle\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.subTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime startDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableordersDetail.startDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'startDate\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.startDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TourName {
                get {
                    try {
                        return ((string)(this[this.tableordersDetail.TourNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TourName\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.TourNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TourName_cn {
                get {
                    try {
                        return ((string)(this[this.tableordersDetail.TourName_cnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TourName_cn\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.TourName_cnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int memberId {
                get {
                    return ((int)(this[this.tableordersDetail.memberIdColumn]));
                }
                set {
                    this[this.tableordersDetail.memberIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal balance {
                get {
                    try {
                        return ((decimal)(this[this.tableordersDetail.balanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'balance\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.balanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal fare {
                get {
                    return ((decimal)(this[this.tableordersDetail.fareColumn]));
                }
                set {
                    this[this.tableordersDetail.fareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numberFree {
                get {
                    return ((int)(this[this.tableordersDetail.numberFreeColumn]));
                }
                set {
                    this[this.tableordersDetail.numberFreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string roomShare {
                get {
                    return ((string)(this[this.tableordersDetail.roomShareColumn]));
                }
                set {
                    this[this.tableordersDetail.roomShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte status {
                get {
                    return ((byte)(this[this.tableordersDetail.statusColumn]));
                }
                set {
                    this[this.tableordersDetail.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    return ((string)(this[this.tableordersDetail.remarkColumn]));
                }
                set {
                    this[this.tableordersDetail.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int agentId {
                get {
                    return ((int)(this[this.tableordersDetail.agentIdColumn]));
                }
                set {
                    this[this.tableordersDetail.agentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string companyName {
                get {
                    try {
                        return ((string)(this[this.tableordersDetail.companyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'companyName\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.companyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal fareAdult {
                get {
                    try {
                        return ((decimal)(this[this.tableordersDetail.fareAdultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fareAdult\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.fareAdultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal fareChild {
                get {
                    try {
                        return ((decimal)(this[this.tableordersDetail.fareChildColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fareChild\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.fareChildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal serviceFee {
                get {
                    return ((decimal)(this[this.tableordersDetail.serviceFeeColumn]));
                }
                set {
                    this[this.tableordersDetail.serviceFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int empId {
                get {
                    return ((int)(this[this.tableordersDetail.empIdColumn]));
                }
                set {
                    this[this.tableordersDetail.empIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tableordersDetail.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte TourDay {
                get {
                    try {
                        return ((byte)(this[this.tableordersDetail.TourDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TourDay\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.TourDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isFloatPrice {
                get {
                    try {
                        return ((bool)(this[this.tableordersDetail.isFloatPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isFloatPrice\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.isFloatPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nickname {
                get {
                    try {
                        return ((string)(this[this.tableordersDetail.nicknameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nickname\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.nicknameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime orderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableordersDetail.orderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orderDate\' in table \'ordersDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableordersDetail.orderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agentInv {
                get {
                    return ((string)(this[this.tableordersDetail.agentInvColumn]));
                }
                set {
                    this[this.tableordersDetail.agentInvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubTitleNull() {
                return this.IsNull(this.tableordersDetail.subTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubTitleNull() {
                this[this.tableordersDetail.subTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstartDateNull() {
                return this.IsNull(this.tableordersDetail.startDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstartDateNull() {
                this[this.tableordersDetail.startDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTourNameNull() {
                return this.IsNull(this.tableordersDetail.TourNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTourNameNull() {
                this[this.tableordersDetail.TourNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTourName_cnNull() {
                return this.IsNull(this.tableordersDetail.TourName_cnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTourName_cnNull() {
                this[this.tableordersDetail.TourName_cnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbalanceNull() {
                return this.IsNull(this.tableordersDetail.balanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbalanceNull() {
                this[this.tableordersDetail.balanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscompanyNameNull() {
                return this.IsNull(this.tableordersDetail.companyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcompanyNameNull() {
                this[this.tableordersDetail.companyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfareAdultNull() {
                return this.IsNull(this.tableordersDetail.fareAdultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfareAdultNull() {
                this[this.tableordersDetail.fareAdultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfareChildNull() {
                return this.IsNull(this.tableordersDetail.fareChildColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfareChildNull() {
                this[this.tableordersDetail.fareChildColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tableordersDetail.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tableordersDetail.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTourDayNull() {
                return this.IsNull(this.tableordersDetail.TourDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTourDayNull() {
                this[this.tableordersDetail.TourDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisFloatPriceNull() {
                return this.IsNull(this.tableordersDetail.isFloatPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisFloatPriceNull() {
                this[this.tableordersDetail.isFloatPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnicknameNull() {
                return this.IsNull(this.tableordersDetail.nicknameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnicknameNull() {
                this[this.tableordersDetail.nicknameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsorderDateNull() {
                return this.IsNull(this.tableordersDetail.orderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetorderDateNull() {
                this[this.tableordersDetail.orderDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NotSeatsOrdersRow : global::System.Data.DataRow {
            
            private NotSeatsOrdersDataTable tableNotSeatsOrders;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NotSeatsOrdersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNotSeatsOrders = ((NotSeatsOrdersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int orderId {
                get {
                    return ((int)(this[this.tableNotSeatsOrders.orderIdColumn]));
                }
                set {
                    this[this.tableNotSeatsOrders.orderIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string username {
                get {
                    try {
                        return ((string)(this[this.tableNotSeatsOrders.usernameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'username\' in table \'NotSeatsOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotSeatsOrders.usernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numberAdult {
                get {
                    return ((int)(this[this.tableNotSeatsOrders.numberAdultColumn]));
                }
                set {
                    this[this.tableNotSeatsOrders.numberAdultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numberChild {
                get {
                    return ((int)(this[this.tableNotSeatsOrders.numberChildColumn]));
                }
                set {
                    this[this.tableNotSeatsOrders.numberChildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numberFree {
                get {
                    return ((int)(this[this.tableNotSeatsOrders.numberFreeColumn]));
                }
                set {
                    this[this.tableNotSeatsOrders.numberFreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contactPhone {
                get {
                    return ((string)(this[this.tableNotSeatsOrders.contactPhoneColumn]));
                }
                set {
                    this[this.tableNotSeatsOrders.contactPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsusernameNull() {
                return this.IsNull(this.tableNotSeatsOrders.usernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetusernameNull() {
                this[this.tableNotSeatsOrders.usernameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrderPriceRow : global::System.Data.DataRow {
            
            private OrderPriceDataTable tableOrderPrice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderPriceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrderPrice = ((OrderPriceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int orderId {
                get {
                    return ((int)(this[this.tableOrderPrice.orderIdColumn]));
                }
                set {
                    this[this.tableOrderPrice.orderIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int scheduleId {
                get {
                    return ((int)(this[this.tableOrderPrice.scheduleIdColumn]));
                }
                set {
                    this[this.tableOrderPrice.scheduleIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal priceAdult {
                get {
                    return ((decimal)(this[this.tableOrderPrice.priceAdultColumn]));
                }
                set {
                    this[this.tableOrderPrice.priceAdultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal priceChild {
                get {
                    return ((decimal)(this[this.tableOrderPrice.priceChildColumn]));
                }
                set {
                    this[this.tableOrderPrice.priceChildColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrdersRow : global::System.Data.DataRow {
            
            private OrdersDataTable tableOrders;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrdersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrders = ((OrdersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int orderId {
                get {
                    return ((int)(this[this.tableOrders.orderIdColumn]));
                }
                set {
                    this[this.tableOrders.orderIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int scheduleId {
                get {
                    return ((int)(this[this.tableOrders.scheduleIdColumn]));
                }
                set {
                    this[this.tableOrders.scheduleIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pickup {
                get {
                    return ((string)(this[this.tableOrders.pickupColumn]));
                }
                set {
                    this[this.tableOrders.pickupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numberAdult {
                get {
                    return ((int)(this[this.tableOrders.numberAdultColumn]));
                }
                set {
                    this[this.tableOrders.numberAdultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numberChild {
                get {
                    return ((int)(this[this.tableOrders.numberChildColumn]));
                }
                set {
                    this[this.tableOrders.numberChildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numberFree {
                get {
                    return ((int)(this[this.tableOrders.numberFreeColumn]));
                }
                set {
                    this[this.tableOrders.numberFreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal fare {
                get {
                    return ((decimal)(this[this.tableOrders.fareColumn]));
                }
                set {
                    this[this.tableOrders.fareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal bookRooms {
                get {
                    return ((decimal)(this[this.tableOrders.bookRoomsColumn]));
                }
                set {
                    this[this.tableOrders.bookRoomsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string roomShare {
                get {
                    return ((string)(this[this.tableOrders.roomShareColumn]));
                }
                set {
                    this[this.tableOrders.roomShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal actualAmount {
                get {
                    return ((decimal)(this[this.tableOrders.actualAmountColumn]));
                }
                set {
                    this[this.tableOrders.actualAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal balance {
                get {
                    try {
                        return ((decimal)(this[this.tableOrders.balanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'balance\' in table \'Orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrders.balanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int empId {
                get {
                    return ((int)(this[this.tableOrders.empIdColumn]));
                }
                set {
                    this[this.tableOrders.empIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string firstName {
                get {
                    return ((string)(this[this.tableOrders.firstNameColumn]));
                }
                set {
                    this[this.tableOrders.firstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lastName {
                get {
                    return ((string)(this[this.tableOrders.lastNameColumn]));
                }
                set {
                    this[this.tableOrders.lastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contactPhone {
                get {
                    return ((string)(this[this.tableOrders.contactPhoneColumn]));
                }
                set {
                    this[this.tableOrders.contactPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    return ((string)(this[this.tableOrders.emailColumn]));
                }
                set {
                    this[this.tableOrders.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int agentId {
                get {
                    return ((int)(this[this.tableOrders.agentIdColumn]));
                }
                set {
                    this[this.tableOrders.agentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nickname {
                get {
                    try {
                        return ((string)(this[this.tableOrders.nicknameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nickname\' in table \'Orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrders.nicknameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shortName {
                get {
                    try {
                        return ((string)(this[this.tableOrders.shortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shortName\' in table \'Orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrders.shortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbalanceNull() {
                return this.IsNull(this.tableOrders.balanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbalanceNull() {
                this[this.tableOrders.balanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnicknameNull() {
                return this.IsNull(this.tableOrders.nicknameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnicknameNull() {
                this[this.tableOrders.nicknameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshortNameNull() {
                return this.IsNull(this.tableOrders.shortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshortNameNull() {
                this[this.tableOrders.shortNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ordersDetailRowChangeEvent : global::System.EventArgs {
            
            private ordersDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ordersDetailRowChangeEvent(ordersDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ordersDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NotSeatsOrdersRowChangeEvent : global::System.EventArgs {
            
            private NotSeatsOrdersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotSeatsOrdersRowChangeEvent(NotSeatsOrdersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotSeatsOrdersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrderPriceRowChangeEvent : global::System.EventArgs {
            
            private OrderPriceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderPriceRowChangeEvent(OrderPriceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderPriceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrdersRowChangeEvent : global::System.EventArgs {
            
            private OrdersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrdersRowChangeEvent(OrdersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrdersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.Omei.DLL.DS_OrdersTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ordersDetailTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ordersDetailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ordersDetail";
            tableMapping.ColumnMappings.Add("orderId", "orderId");
            tableMapping.ColumnMappings.Add("scheduleId", "scheduleId");
            tableMapping.ColumnMappings.Add("pickup", "pickup");
            tableMapping.ColumnMappings.Add("numberAdult", "numberAdult");
            tableMapping.ColumnMappings.Add("numberChild", "numberChild");
            tableMapping.ColumnMappings.Add("priceAdult", "priceAdult");
            tableMapping.ColumnMappings.Add("priceChild", "priceChild");
            tableMapping.ColumnMappings.Add("bookRooms", "bookRooms");
            tableMapping.ColumnMappings.Add("discount", "discount");
            tableMapping.ColumnMappings.Add("pay", "pay");
            tableMapping.ColumnMappings.Add("actualAmount", "actualAmount");
            tableMapping.ColumnMappings.Add("firstName", "firstName");
            tableMapping.ColumnMappings.Add("lastName", "lastName");
            tableMapping.ColumnMappings.Add("contactPhone", "contactPhone");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("miscCharge", "miscCharge");
            tableMapping.ColumnMappings.Add("suggestAmount", "suggestAmount");
            tableMapping.ColumnMappings.Add("subTitle", "subTitle");
            tableMapping.ColumnMappings.Add("startDate", "startDate");
            tableMapping.ColumnMappings.Add("TourName", "TourName");
            tableMapping.ColumnMappings.Add("TourName_cn", "TourName_cn");
            tableMapping.ColumnMappings.Add("memberId", "memberId");
            tableMapping.ColumnMappings.Add("balance", "balance");
            tableMapping.ColumnMappings.Add("fare", "fare");
            tableMapping.ColumnMappings.Add("numberFree", "numberFree");
            tableMapping.ColumnMappings.Add("roomShare", "roomShare");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("remark", "remark");
            tableMapping.ColumnMappings.Add("agentId", "agentId");
            tableMapping.ColumnMappings.Add("companyName", "companyName");
            tableMapping.ColumnMappings.Add("fareAdult", "fareAdult");
            tableMapping.ColumnMappings.Add("fareChild", "fareChild");
            tableMapping.ColumnMappings.Add("serviceFee", "serviceFee");
            tableMapping.ColumnMappings.Add("empId", "empId");
            tableMapping.ColumnMappings.Add("notes", "notes");
            tableMapping.ColumnMappings.Add("TourDay", "TourDay");
            tableMapping.ColumnMappings.Add("isFloatPrice", "isFloatPrice");
            tableMapping.ColumnMappings.Add("nickname", "nickname");
            tableMapping.ColumnMappings.Add("orderDate", "orderDate");
            tableMapping.ColumnMappings.Add("agentInv", "agentInv");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.Omei.DLL.Properties.Settings.Default.OmeiTravelConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT o.orderId, o.scheduleId, o.pickup, o.numberAdult, o.numberChild, o.numberFree, 
      o.priceAdult, o.priceChild, o.bookRooms, o.roomShare, o.miscCharge, o.discount, 
      o.pay, o.suggestAmount, o.actualAmount, o.firstName, o.lastName, o.contactPhone, 
      o.email, s.subTitle, s.startDate, t.TourName, t.TourName_cn, o.memberId, 
      o.actualAmount - o.pay AS balance, o.fare, o.status, o.remark, o.agentId,o.agentInv, 
      c.companyName, o.priceAdult * o.numberAdult AS fareAdult, 
      o.priceChild * o.numberChild AS fareChild, o.serviceFee, o.empId, o.notes, 
t.TourDay, 
      t.isFloatPrice, e.nickname, o.orderDate
FROM orders AS o 
left join BusSchedule AS s ON o.scheduleId = s.scheduleId 
left join tours AS t ON s.tourId = t.TourID 
left join Company AS c ON o.agentId = c.companyId
left join EmployeeInfo as e on o.empID=e.employeeID
WHERE (o.orderId = @orderId)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@orderId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "orderId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DS_Orders.ordersDetailDataTable GetData(int orderId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(orderId));
            DS_Orders.ordersDetailDataTable dataTable = new DS_Orders.ordersDetailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NotSeatsOrdersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NotSeatsOrdersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NotSeatsOrders";
            tableMapping.ColumnMappings.Add("orderId", "orderId");
            tableMapping.ColumnMappings.Add("username", "username");
            tableMapping.ColumnMappings.Add("numberAdult", "numberAdult");
            tableMapping.ColumnMappings.Add("numberChild", "numberChild");
            tableMapping.ColumnMappings.Add("numberFree", "numberFree");
            tableMapping.ColumnMappings.Add("contactPhone", "contactPhone");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.Omei.DLL.Properties.Settings.Default.OmeiTravelConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"select
	orderId, firstName+'.'+lastName as username,
	numberAdult, numberChild, numberFree, contactPhone
from orders
where scheduleId=@scheduleId and status<=3 and
   orderId not in
(
	select orderId
	from
	(
		select b.orderId, b.confSeat, orders.numberAdult+orders.numberChild+orders.numberFree as bookSeat
		from
			(
				select 
					orderId, count(*) as confSeat
				from BusSeats
				where 
					scheduleId=@scheduleId
				group by orderId
			) b
			left join orders on b.orderId=orders.orderId
	) seat
	where confSeat=bookSeat
)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scheduleId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "scheduleId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DS_Orders.NotSeatsOrdersDataTable GetNotSeatedOrders(int scheduleId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(scheduleId));
            DS_Orders.NotSeatsOrdersDataTable dataTable = new DS_Orders.NotSeatsOrdersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OrderPriceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OrderPriceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OrderPrice";
            tableMapping.ColumnMappings.Add("orderId", "orderId");
            tableMapping.ColumnMappings.Add("scheduleId", "scheduleId");
            tableMapping.ColumnMappings.Add("priceAdult", "priceAdult");
            tableMapping.ColumnMappings.Add("priceChild", "priceChild");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.Omei.DLL.Properties.Settings.Default.OmeiTravelConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT orderId, scheduleId, priceAdult, priceChild\r\nFROM orders\r\nWHERE orderID=@o" +
                "rderID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@orderID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "orderId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DS_Orders.OrderPriceDataTable GetData(int orderID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(orderID));
            DS_Orders.OrderPriceDataTable dataTable = new DS_Orders.OrderPriceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OrdersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OrdersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Orders";
            tableMapping.ColumnMappings.Add("orderId", "orderId");
            tableMapping.ColumnMappings.Add("scheduleId", "scheduleId");
            tableMapping.ColumnMappings.Add("pickup", "pickup");
            tableMapping.ColumnMappings.Add("numberAdult", "numberAdult");
            tableMapping.ColumnMappings.Add("numberChild", "numberChild");
            tableMapping.ColumnMappings.Add("numberFree", "numberFree");
            tableMapping.ColumnMappings.Add("fare", "fare");
            tableMapping.ColumnMappings.Add("bookRooms", "bookRooms");
            tableMapping.ColumnMappings.Add("roomShare", "roomShare");
            tableMapping.ColumnMappings.Add("actualAmount", "actualAmount");
            tableMapping.ColumnMappings.Add("balance", "balance");
            tableMapping.ColumnMappings.Add("empId", "empId");
            tableMapping.ColumnMappings.Add("firstName", "firstName");
            tableMapping.ColumnMappings.Add("lastName", "lastName");
            tableMapping.ColumnMappings.Add("contactPhone", "contactPhone");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("agentId", "agentId");
            tableMapping.ColumnMappings.Add("nickname", "nickname");
            tableMapping.ColumnMappings.Add("shortName", "shortName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.Omei.DLL.Properties.Settings.Default.OmeiTravelConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT o.orderId, o.scheduleId, o.pickup, o.numberAdult, o.numberChild, o.numberFree, 
      o.fare, o.bookRooms, o.roomShare, o.actualAmount, o.actualAmount-o.pay as balance, o.empId, o.firstName, 
      o.lastName, o.contactPhone, o.email, o.agentId, e.nickname, c.shortName
FROM orders AS o 
	left join EmployeeInfo AS e ON o.empId = e.employeeID
	left join Company AS c ON o.agentId = c.companyId
WHERE o.scheduleID=@scheduleID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scheduleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "scheduleId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DS_Orders.OrdersDataTable GetData(int scheduleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(scheduleID));
            DS_Orders.OrdersDataTable dataTable = new DS_Orders.OrdersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591