//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.Omei.DLL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_Agent")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_Agent : global::System.Data.DataSet {
        
        private NewOrdersDataTable tableNewOrders;
        
        private AgentReceivablesDataTable tableAgentReceivables;
        
        private AgentBillsDataTable tableAgentBills;
        
        private AgentTotalDataTable tableAgentTotal;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_Agent() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_Agent(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["NewOrders"] != null)) {
                    base.Tables.Add(new NewOrdersDataTable(ds.Tables["NewOrders"]));
                }
                if ((ds.Tables["AgentReceivables"] != null)) {
                    base.Tables.Add(new AgentReceivablesDataTable(ds.Tables["AgentReceivables"]));
                }
                if ((ds.Tables["AgentBills"] != null)) {
                    base.Tables.Add(new AgentBillsDataTable(ds.Tables["AgentBills"]));
                }
                if ((ds.Tables["AgentTotal"] != null)) {
                    base.Tables.Add(new AgentTotalDataTable(ds.Tables["AgentTotal"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NewOrdersDataTable NewOrders {
            get {
                return this.tableNewOrders;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AgentReceivablesDataTable AgentReceivables {
            get {
                return this.tableAgentReceivables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AgentBillsDataTable AgentBills {
            get {
                return this.tableAgentBills;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AgentTotalDataTable AgentTotal {
            get {
                return this.tableAgentTotal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_Agent cln = ((DS_Agent)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["NewOrders"] != null)) {
                    base.Tables.Add(new NewOrdersDataTable(ds.Tables["NewOrders"]));
                }
                if ((ds.Tables["AgentReceivables"] != null)) {
                    base.Tables.Add(new AgentReceivablesDataTable(ds.Tables["AgentReceivables"]));
                }
                if ((ds.Tables["AgentBills"] != null)) {
                    base.Tables.Add(new AgentBillsDataTable(ds.Tables["AgentBills"]));
                }
                if ((ds.Tables["AgentTotal"] != null)) {
                    base.Tables.Add(new AgentTotalDataTable(ds.Tables["AgentTotal"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableNewOrders = ((NewOrdersDataTable)(base.Tables["NewOrders"]));
            if ((initTable == true)) {
                if ((this.tableNewOrders != null)) {
                    this.tableNewOrders.InitVars();
                }
            }
            this.tableAgentReceivables = ((AgentReceivablesDataTable)(base.Tables["AgentReceivables"]));
            if ((initTable == true)) {
                if ((this.tableAgentReceivables != null)) {
                    this.tableAgentReceivables.InitVars();
                }
            }
            this.tableAgentBills = ((AgentBillsDataTable)(base.Tables["AgentBills"]));
            if ((initTable == true)) {
                if ((this.tableAgentBills != null)) {
                    this.tableAgentBills.InitVars();
                }
            }
            this.tableAgentTotal = ((AgentTotalDataTable)(base.Tables["AgentTotal"]));
            if ((initTable == true)) {
                if ((this.tableAgentTotal != null)) {
                    this.tableAgentTotal.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_Agent";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_Agent.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableNewOrders = new NewOrdersDataTable();
            base.Tables.Add(this.tableNewOrders);
            this.tableAgentReceivables = new AgentReceivablesDataTable();
            base.Tables.Add(this.tableAgentReceivables);
            this.tableAgentBills = new AgentBillsDataTable();
            base.Tables.Add(this.tableAgentBills);
            this.tableAgentTotal = new AgentTotalDataTable();
            base.Tables.Add(this.tableAgentTotal);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNewOrders() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAgentReceivables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAgentBills() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAgentTotal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_Agent ds = new DS_Agent();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void NewOrdersRowChangeEventHandler(object sender, NewOrdersRowChangeEvent e);
        
        public delegate void AgentReceivablesRowChangeEventHandler(object sender, AgentReceivablesRowChangeEvent e);
        
        public delegate void AgentBillsRowChangeEventHandler(object sender, AgentBillsRowChangeEvent e);
        
        public delegate void AgentTotalRowChangeEventHandler(object sender, AgentTotalRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NewOrdersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnorderID;
            
            private global::System.Data.DataColumn columnscheduleID;
            
            private global::System.Data.DataColumn columnfirstName;
            
            private global::System.Data.DataColumn columnlastName;
            
            private global::System.Data.DataColumn columnagentID;
            
            private global::System.Data.DataColumn columnnumberAdult;
            
            private global::System.Data.DataColumn columnnumberChild;
            
            private global::System.Data.DataColumn columnnumberFree;
            
            private global::System.Data.DataColumn columnpriceAdult;
            
            private global::System.Data.DataColumn columnpriceChild;
            
            private global::System.Data.DataColumn columnfare;
            
            private global::System.Data.DataColumn columnmiscCharge;
            
            private global::System.Data.DataColumn columnactualAmount;
            
            private global::System.Data.DataColumn columncompanyName;
            
            private global::System.Data.DataColumn columncompanyName_cn;
            
            private global::System.Data.DataColumn columnsubtitle;
            
            private global::System.Data.DataColumn columntourName;
            
            private global::System.Data.DataColumn columntourName_cn;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnTourDay;
            
            private global::System.Data.DataColumn columnstartDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NewOrdersDataTable() {
                this.TableName = "NewOrders";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NewOrdersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NewOrdersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn orderIDColumn {
                get {
                    return this.columnorderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scheduleIDColumn {
                get {
                    return this.columnscheduleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn firstNameColumn {
                get {
                    return this.columnfirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lastNameColumn {
                get {
                    return this.columnlastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agentIDColumn {
                get {
                    return this.columnagentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberAdultColumn {
                get {
                    return this.columnnumberAdult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberChildColumn {
                get {
                    return this.columnnumberChild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberFreeColumn {
                get {
                    return this.columnnumberFree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceAdultColumn {
                get {
                    return this.columnpriceAdult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceChildColumn {
                get {
                    return this.columnpriceChild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fareColumn {
                get {
                    return this.columnfare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn miscChargeColumn {
                get {
                    return this.columnmiscCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn actualAmountColumn {
                get {
                    return this.columnactualAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn companyNameColumn {
                get {
                    return this.columncompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn companyName_cnColumn {
                get {
                    return this.columncompanyName_cn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subtitleColumn {
                get {
                    return this.columnsubtitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tourNameColumn {
                get {
                    return this.columntourName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tourName_cnColumn {
                get {
                    return this.columntourName_cn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TourDayColumn {
                get {
                    return this.columnTourDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn startDateColumn {
                get {
                    return this.columnstartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NewOrdersRow this[int index] {
                get {
                    return ((NewOrdersRow)(this.Rows[index]));
                }
            }
            
            public event NewOrdersRowChangeEventHandler NewOrdersRowChanging;
            
            public event NewOrdersRowChangeEventHandler NewOrdersRowChanged;
            
            public event NewOrdersRowChangeEventHandler NewOrdersRowDeleting;
            
            public event NewOrdersRowChangeEventHandler NewOrdersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNewOrdersRow(NewOrdersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NewOrdersRow AddNewOrdersRow(
                        int scheduleID, 
                        string firstName, 
                        string lastName, 
                        int agentID, 
                        int numberAdult, 
                        int numberChild, 
                        int numberFree, 
                        decimal priceAdult, 
                        decimal priceChild, 
                        decimal fare, 
                        decimal miscCharge, 
                        decimal actualAmount, 
                        string companyName, 
                        string companyName_cn, 
                        string subtitle, 
                        string tourName, 
                        string tourName_cn, 
                        byte status, 
                        byte TourDay, 
                        System.DateTime startDate) {
                NewOrdersRow rowNewOrdersRow = ((NewOrdersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        scheduleID,
                        firstName,
                        lastName,
                        agentID,
                        numberAdult,
                        numberChild,
                        numberFree,
                        priceAdult,
                        priceChild,
                        fare,
                        miscCharge,
                        actualAmount,
                        companyName,
                        companyName_cn,
                        subtitle,
                        tourName,
                        tourName_cn,
                        status,
                        TourDay,
                        startDate};
                rowNewOrdersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNewOrdersRow);
                return rowNewOrdersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NewOrdersRow FindByorderID(int orderID) {
                return ((NewOrdersRow)(this.Rows.Find(new object[] {
                            orderID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                NewOrdersDataTable cln = ((NewOrdersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NewOrdersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnorderID = base.Columns["orderID"];
                this.columnscheduleID = base.Columns["scheduleID"];
                this.columnfirstName = base.Columns["firstName"];
                this.columnlastName = base.Columns["lastName"];
                this.columnagentID = base.Columns["agentID"];
                this.columnnumberAdult = base.Columns["numberAdult"];
                this.columnnumberChild = base.Columns["numberChild"];
                this.columnnumberFree = base.Columns["numberFree"];
                this.columnpriceAdult = base.Columns["priceAdult"];
                this.columnpriceChild = base.Columns["priceChild"];
                this.columnfare = base.Columns["fare"];
                this.columnmiscCharge = base.Columns["miscCharge"];
                this.columnactualAmount = base.Columns["actualAmount"];
                this.columncompanyName = base.Columns["companyName"];
                this.columncompanyName_cn = base.Columns["companyName_cn"];
                this.columnsubtitle = base.Columns["subtitle"];
                this.columntourName = base.Columns["tourName"];
                this.columntourName_cn = base.Columns["tourName_cn"];
                this.columnstatus = base.Columns["status"];
                this.columnTourDay = base.Columns["TourDay"];
                this.columnstartDate = base.Columns["startDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnorderID = new global::System.Data.DataColumn("orderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderID);
                this.columnscheduleID = new global::System.Data.DataColumn("scheduleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscheduleID);
                this.columnfirstName = new global::System.Data.DataColumn("firstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirstName);
                this.columnlastName = new global::System.Data.DataColumn("lastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastName);
                this.columnagentID = new global::System.Data.DataColumn("agentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagentID);
                this.columnnumberAdult = new global::System.Data.DataColumn("numberAdult", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberAdult);
                this.columnnumberChild = new global::System.Data.DataColumn("numberChild", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberChild);
                this.columnnumberFree = new global::System.Data.DataColumn("numberFree", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberFree);
                this.columnpriceAdult = new global::System.Data.DataColumn("priceAdult", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriceAdult);
                this.columnpriceChild = new global::System.Data.DataColumn("priceChild", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriceChild);
                this.columnfare = new global::System.Data.DataColumn("fare", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfare);
                this.columnmiscCharge = new global::System.Data.DataColumn("miscCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmiscCharge);
                this.columnactualAmount = new global::System.Data.DataColumn("actualAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactualAmount);
                this.columncompanyName = new global::System.Data.DataColumn("companyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompanyName);
                this.columncompanyName_cn = new global::System.Data.DataColumn("companyName_cn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompanyName_cn);
                this.columnsubtitle = new global::System.Data.DataColumn("subtitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubtitle);
                this.columntourName = new global::System.Data.DataColumn("tourName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntourName);
                this.columntourName_cn = new global::System.Data.DataColumn("tourName_cn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntourName_cn);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnTourDay = new global::System.Data.DataColumn("TourDay", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTourDay);
                this.columnstartDate = new global::System.Data.DataColumn("startDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnorderID}, true));
                this.columnorderID.AutoIncrement = true;
                this.columnorderID.AllowDBNull = false;
                this.columnorderID.ReadOnly = true;
                this.columnorderID.Unique = true;
                this.columnscheduleID.AllowDBNull = false;
                this.columnfirstName.AllowDBNull = false;
                this.columnfirstName.MaxLength = 50;
                this.columnlastName.AllowDBNull = false;
                this.columnlastName.MaxLength = 50;
                this.columnagentID.AllowDBNull = false;
                this.columnnumberAdult.AllowDBNull = false;
                this.columnnumberChild.AllowDBNull = false;
                this.columnnumberFree.AllowDBNull = false;
                this.columnpriceAdult.AllowDBNull = false;
                this.columnpriceChild.AllowDBNull = false;
                this.columnfare.AllowDBNull = false;
                this.columnmiscCharge.AllowDBNull = false;
                this.columnactualAmount.AllowDBNull = false;
                this.columncompanyName.MaxLength = 200;
                this.columncompanyName_cn.MaxLength = 200;
                this.columnsubtitle.MaxLength = 200;
                this.columntourName.MaxLength = 200;
                this.columntourName_cn.MaxLength = 200;
                this.columnstatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NewOrdersRow NewNewOrdersRow() {
                return ((NewOrdersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NewOrdersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(NewOrdersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NewOrdersRowChanged != null)) {
                    this.NewOrdersRowChanged(this, new NewOrdersRowChangeEvent(((NewOrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NewOrdersRowChanging != null)) {
                    this.NewOrdersRowChanging(this, new NewOrdersRowChangeEvent(((NewOrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NewOrdersRowDeleted != null)) {
                    this.NewOrdersRowDeleted(this, new NewOrdersRowChangeEvent(((NewOrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NewOrdersRowDeleting != null)) {
                    this.NewOrdersRowDeleting(this, new NewOrdersRowChangeEvent(((NewOrdersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNewOrdersRow(NewOrdersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_Agent ds = new DS_Agent();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NewOrdersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AgentReceivablesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnorderID;
            
            private global::System.Data.DataColumn columnagentID;
            
            private global::System.Data.DataColumn columnagentReceivable;
            
            private global::System.Data.DataColumn columnagentPaid;
            
            private global::System.Data.DataColumn columnorderClosedDate;
            
            private global::System.Data.DataColumn columncompanyName;
            
            private global::System.Data.DataColumn columncompanyName_cn;
            
            private global::System.Data.DataColumn columnusername;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnadditionalDiscount;
            
            private global::System.Data.DataColumn columnreportDate;
            
            private global::System.Data.DataColumn columninvoiceID;
            
            private global::System.Data.DataColumn columnbalance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentReceivablesDataTable() {
                this.TableName = "AgentReceivables";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AgentReceivablesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AgentReceivablesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn orderIDColumn {
                get {
                    return this.columnorderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agentIDColumn {
                get {
                    return this.columnagentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agentReceivableColumn {
                get {
                    return this.columnagentReceivable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agentPaidColumn {
                get {
                    return this.columnagentPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn orderClosedDateColumn {
                get {
                    return this.columnorderClosedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn companyNameColumn {
                get {
                    return this.columncompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn companyName_cnColumn {
                get {
                    return this.columncompanyName_cn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn usernameColumn {
                get {
                    return this.columnusername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn additionalDiscountColumn {
                get {
                    return this.columnadditionalDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reportDateColumn {
                get {
                    return this.columnreportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoiceIDColumn {
                get {
                    return this.columninvoiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn balanceColumn {
                get {
                    return this.columnbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentReceivablesRow this[int index] {
                get {
                    return ((AgentReceivablesRow)(this.Rows[index]));
                }
            }
            
            public event AgentReceivablesRowChangeEventHandler AgentReceivablesRowChanging;
            
            public event AgentReceivablesRowChangeEventHandler AgentReceivablesRowChanged;
            
            public event AgentReceivablesRowChangeEventHandler AgentReceivablesRowDeleting;
            
            public event AgentReceivablesRowChangeEventHandler AgentReceivablesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAgentReceivablesRow(AgentReceivablesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentReceivablesRow AddAgentReceivablesRow(int orderID, int agentID, decimal agentReceivable, decimal agentPaid, System.DateTime orderClosedDate, string companyName, string companyName_cn, string username, byte status, decimal additionalDiscount, System.DateTime reportDate, int invoiceID, decimal balance) {
                AgentReceivablesRow rowAgentReceivablesRow = ((AgentReceivablesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        orderID,
                        agentID,
                        agentReceivable,
                        agentPaid,
                        orderClosedDate,
                        companyName,
                        companyName_cn,
                        username,
                        status,
                        additionalDiscount,
                        reportDate,
                        invoiceID,
                        balance};
                rowAgentReceivablesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAgentReceivablesRow);
                return rowAgentReceivablesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentReceivablesRow FindByorderID(int orderID) {
                return ((AgentReceivablesRow)(this.Rows.Find(new object[] {
                            orderID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AgentReceivablesDataTable cln = ((AgentReceivablesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AgentReceivablesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnorderID = base.Columns["orderID"];
                this.columnagentID = base.Columns["agentID"];
                this.columnagentReceivable = base.Columns["agentReceivable"];
                this.columnagentPaid = base.Columns["agentPaid"];
                this.columnorderClosedDate = base.Columns["orderClosedDate"];
                this.columncompanyName = base.Columns["companyName"];
                this.columncompanyName_cn = base.Columns["companyName_cn"];
                this.columnusername = base.Columns["username"];
                this.columnstatus = base.Columns["status"];
                this.columnadditionalDiscount = base.Columns["additionalDiscount"];
                this.columnreportDate = base.Columns["reportDate"];
                this.columninvoiceID = base.Columns["invoiceID"];
                this.columnbalance = base.Columns["balance"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnorderID = new global::System.Data.DataColumn("orderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderID);
                this.columnagentID = new global::System.Data.DataColumn("agentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagentID);
                this.columnagentReceivable = new global::System.Data.DataColumn("agentReceivable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagentReceivable);
                this.columnagentPaid = new global::System.Data.DataColumn("agentPaid", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagentPaid);
                this.columnorderClosedDate = new global::System.Data.DataColumn("orderClosedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderClosedDate);
                this.columncompanyName = new global::System.Data.DataColumn("companyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompanyName);
                this.columncompanyName_cn = new global::System.Data.DataColumn("companyName_cn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompanyName_cn);
                this.columnusername = new global::System.Data.DataColumn("username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnadditionalDiscount = new global::System.Data.DataColumn("additionalDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadditionalDiscount);
                this.columnreportDate = new global::System.Data.DataColumn("reportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportDate);
                this.columninvoiceID = new global::System.Data.DataColumn("invoiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoiceID);
                this.columnbalance = new global::System.Data.DataColumn("balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbalance);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnorderID}, true));
                this.columnorderID.AllowDBNull = false;
                this.columnorderID.Unique = true;
                this.columncompanyName.MaxLength = 200;
                this.columncompanyName_cn.MaxLength = 200;
                this.columnusername.ReadOnly = true;
                this.columnusername.MaxLength = 101;
                this.columninvoiceID.AllowDBNull = false;
                this.columnbalance.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentReceivablesRow NewAgentReceivablesRow() {
                return ((AgentReceivablesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AgentReceivablesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AgentReceivablesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AgentReceivablesRowChanged != null)) {
                    this.AgentReceivablesRowChanged(this, new AgentReceivablesRowChangeEvent(((AgentReceivablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AgentReceivablesRowChanging != null)) {
                    this.AgentReceivablesRowChanging(this, new AgentReceivablesRowChangeEvent(((AgentReceivablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AgentReceivablesRowDeleted != null)) {
                    this.AgentReceivablesRowDeleted(this, new AgentReceivablesRowChangeEvent(((AgentReceivablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AgentReceivablesRowDeleting != null)) {
                    this.AgentReceivablesRowDeleting(this, new AgentReceivablesRowChangeEvent(((AgentReceivablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAgentReceivablesRow(AgentReceivablesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_Agent ds = new DS_Agent();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AgentReceivablesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AgentBillsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnreportDate;
            
            private global::System.Data.DataColumn columnorderCount;
            
            private global::System.Data.DataColumn columnagentReceivable;
            
            private global::System.Data.DataColumn columnagentPaid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentBillsDataTable() {
                this.TableName = "AgentBills";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AgentBillsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AgentBillsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reportDateColumn {
                get {
                    return this.columnreportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn orderCountColumn {
                get {
                    return this.columnorderCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agentReceivableColumn {
                get {
                    return this.columnagentReceivable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agentPaidColumn {
                get {
                    return this.columnagentPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentBillsRow this[int index] {
                get {
                    return ((AgentBillsRow)(this.Rows[index]));
                }
            }
            
            public event AgentBillsRowChangeEventHandler AgentBillsRowChanging;
            
            public event AgentBillsRowChangeEventHandler AgentBillsRowChanged;
            
            public event AgentBillsRowChangeEventHandler AgentBillsRowDeleting;
            
            public event AgentBillsRowChangeEventHandler AgentBillsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAgentBillsRow(AgentBillsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentBillsRow AddAgentBillsRow(System.DateTime reportDate, int orderCount, decimal agentReceivable, decimal agentPaid) {
                AgentBillsRow rowAgentBillsRow = ((AgentBillsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        reportDate,
                        orderCount,
                        agentReceivable,
                        agentPaid};
                rowAgentBillsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAgentBillsRow);
                return rowAgentBillsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AgentBillsDataTable cln = ((AgentBillsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AgentBillsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnreportDate = base.Columns["reportDate"];
                this.columnorderCount = base.Columns["orderCount"];
                this.columnagentReceivable = base.Columns["agentReceivable"];
                this.columnagentPaid = base.Columns["agentPaid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnreportDate = new global::System.Data.DataColumn("reportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportDate);
                this.columnorderCount = new global::System.Data.DataColumn("orderCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderCount);
                this.columnagentReceivable = new global::System.Data.DataColumn("agentReceivable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagentReceivable);
                this.columnagentPaid = new global::System.Data.DataColumn("agentPaid", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagentPaid);
                this.columnorderCount.ReadOnly = true;
                this.columnagentReceivable.ReadOnly = true;
                this.columnagentPaid.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentBillsRow NewAgentBillsRow() {
                return ((AgentBillsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AgentBillsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AgentBillsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AgentBillsRowChanged != null)) {
                    this.AgentBillsRowChanged(this, new AgentBillsRowChangeEvent(((AgentBillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AgentBillsRowChanging != null)) {
                    this.AgentBillsRowChanging(this, new AgentBillsRowChangeEvent(((AgentBillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AgentBillsRowDeleted != null)) {
                    this.AgentBillsRowDeleted(this, new AgentBillsRowChangeEvent(((AgentBillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AgentBillsRowDeleting != null)) {
                    this.AgentBillsRowDeleting(this, new AgentBillsRowChangeEvent(((AgentBillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAgentBillsRow(AgentBillsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_Agent ds = new DS_Agent();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AgentBillsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AgentTotalDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnagentID;
            
            private global::System.Data.DataColumn columnagentReceivable;
            
            private global::System.Data.DataColumn columnadditionalDiscount;
            
            private global::System.Data.DataColumn columnagentPaid;
            
            private global::System.Data.DataColumn columncompanyName;
            
            private global::System.Data.DataColumn columncompanyName_cn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTotalDataTable() {
                this.TableName = "AgentTotal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AgentTotalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AgentTotalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agentIDColumn {
                get {
                    return this.columnagentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agentReceivableColumn {
                get {
                    return this.columnagentReceivable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn additionalDiscountColumn {
                get {
                    return this.columnadditionalDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agentPaidColumn {
                get {
                    return this.columnagentPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn companyNameColumn {
                get {
                    return this.columncompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn companyName_cnColumn {
                get {
                    return this.columncompanyName_cn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTotalRow this[int index] {
                get {
                    return ((AgentTotalRow)(this.Rows[index]));
                }
            }
            
            public event AgentTotalRowChangeEventHandler AgentTotalRowChanging;
            
            public event AgentTotalRowChangeEventHandler AgentTotalRowChanged;
            
            public event AgentTotalRowChangeEventHandler AgentTotalRowDeleting;
            
            public event AgentTotalRowChangeEventHandler AgentTotalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAgentTotalRow(AgentTotalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTotalRow AddAgentTotalRow(int agentID, decimal agentReceivable, decimal additionalDiscount, decimal agentPaid, string companyName, string companyName_cn) {
                AgentTotalRow rowAgentTotalRow = ((AgentTotalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        agentID,
                        agentReceivable,
                        additionalDiscount,
                        agentPaid,
                        companyName,
                        companyName_cn};
                rowAgentTotalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAgentTotalRow);
                return rowAgentTotalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AgentTotalDataTable cln = ((AgentTotalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AgentTotalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnagentID = base.Columns["agentID"];
                this.columnagentReceivable = base.Columns["agentReceivable"];
                this.columnadditionalDiscount = base.Columns["additionalDiscount"];
                this.columnagentPaid = base.Columns["agentPaid"];
                this.columncompanyName = base.Columns["companyName"];
                this.columncompanyName_cn = base.Columns["companyName_cn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnagentID = new global::System.Data.DataColumn("agentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagentID);
                this.columnagentReceivable = new global::System.Data.DataColumn("agentReceivable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagentReceivable);
                this.columnadditionalDiscount = new global::System.Data.DataColumn("additionalDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadditionalDiscount);
                this.columnagentPaid = new global::System.Data.DataColumn("agentPaid", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagentPaid);
                this.columncompanyName = new global::System.Data.DataColumn("companyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompanyName);
                this.columncompanyName_cn = new global::System.Data.DataColumn("companyName_cn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompanyName_cn);
                this.columnagentReceivable.ReadOnly = true;
                this.columnadditionalDiscount.ReadOnly = true;
                this.columnagentPaid.ReadOnly = true;
                this.columncompanyName.MaxLength = 200;
                this.columncompanyName_cn.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTotalRow NewAgentTotalRow() {
                return ((AgentTotalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AgentTotalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AgentTotalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AgentTotalRowChanged != null)) {
                    this.AgentTotalRowChanged(this, new AgentTotalRowChangeEvent(((AgentTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AgentTotalRowChanging != null)) {
                    this.AgentTotalRowChanging(this, new AgentTotalRowChangeEvent(((AgentTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AgentTotalRowDeleted != null)) {
                    this.AgentTotalRowDeleted(this, new AgentTotalRowChangeEvent(((AgentTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AgentTotalRowDeleting != null)) {
                    this.AgentTotalRowDeleting(this, new AgentTotalRowChangeEvent(((AgentTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAgentTotalRow(AgentTotalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_Agent ds = new DS_Agent();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AgentTotalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NewOrdersRow : global::System.Data.DataRow {
            
            private NewOrdersDataTable tableNewOrders;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NewOrdersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNewOrders = ((NewOrdersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int orderID {
                get {
                    return ((int)(this[this.tableNewOrders.orderIDColumn]));
                }
                set {
                    this[this.tableNewOrders.orderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int scheduleID {
                get {
                    return ((int)(this[this.tableNewOrders.scheduleIDColumn]));
                }
                set {
                    this[this.tableNewOrders.scheduleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string firstName {
                get {
                    return ((string)(this[this.tableNewOrders.firstNameColumn]));
                }
                set {
                    this[this.tableNewOrders.firstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lastName {
                get {
                    return ((string)(this[this.tableNewOrders.lastNameColumn]));
                }
                set {
                    this[this.tableNewOrders.lastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int agentID {
                get {
                    return ((int)(this[this.tableNewOrders.agentIDColumn]));
                }
                set {
                    this[this.tableNewOrders.agentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numberAdult {
                get {
                    return ((int)(this[this.tableNewOrders.numberAdultColumn]));
                }
                set {
                    this[this.tableNewOrders.numberAdultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numberChild {
                get {
                    return ((int)(this[this.tableNewOrders.numberChildColumn]));
                }
                set {
                    this[this.tableNewOrders.numberChildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numberFree {
                get {
                    return ((int)(this[this.tableNewOrders.numberFreeColumn]));
                }
                set {
                    this[this.tableNewOrders.numberFreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal priceAdult {
                get {
                    return ((decimal)(this[this.tableNewOrders.priceAdultColumn]));
                }
                set {
                    this[this.tableNewOrders.priceAdultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal priceChild {
                get {
                    return ((decimal)(this[this.tableNewOrders.priceChildColumn]));
                }
                set {
                    this[this.tableNewOrders.priceChildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal fare {
                get {
                    return ((decimal)(this[this.tableNewOrders.fareColumn]));
                }
                set {
                    this[this.tableNewOrders.fareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal miscCharge {
                get {
                    return ((decimal)(this[this.tableNewOrders.miscChargeColumn]));
                }
                set {
                    this[this.tableNewOrders.miscChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal actualAmount {
                get {
                    return ((decimal)(this[this.tableNewOrders.actualAmountColumn]));
                }
                set {
                    this[this.tableNewOrders.actualAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string companyName {
                get {
                    try {
                        return ((string)(this[this.tableNewOrders.companyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'companyName\' in table \'NewOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewOrders.companyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string companyName_cn {
                get {
                    try {
                        return ((string)(this[this.tableNewOrders.companyName_cnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'companyName_cn\' in table \'NewOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewOrders.companyName_cnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subtitle {
                get {
                    try {
                        return ((string)(this[this.tableNewOrders.subtitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subtitle\' in table \'NewOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewOrders.subtitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tourName {
                get {
                    try {
                        return ((string)(this[this.tableNewOrders.tourNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tourName\' in table \'NewOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewOrders.tourNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tourName_cn {
                get {
                    try {
                        return ((string)(this[this.tableNewOrders.tourName_cnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tourName_cn\' in table \'NewOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewOrders.tourName_cnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte status {
                get {
                    return ((byte)(this[this.tableNewOrders.statusColumn]));
                }
                set {
                    this[this.tableNewOrders.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte TourDay {
                get {
                    try {
                        return ((byte)(this[this.tableNewOrders.TourDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TourDay\' in table \'NewOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewOrders.TourDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime startDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNewOrders.startDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'startDate\' in table \'NewOrders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewOrders.startDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscompanyNameNull() {
                return this.IsNull(this.tableNewOrders.companyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcompanyNameNull() {
                this[this.tableNewOrders.companyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscompanyName_cnNull() {
                return this.IsNull(this.tableNewOrders.companyName_cnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcompanyName_cnNull() {
                this[this.tableNewOrders.companyName_cnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubtitleNull() {
                return this.IsNull(this.tableNewOrders.subtitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubtitleNull() {
                this[this.tableNewOrders.subtitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstourNameNull() {
                return this.IsNull(this.tableNewOrders.tourNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettourNameNull() {
                this[this.tableNewOrders.tourNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstourName_cnNull() {
                return this.IsNull(this.tableNewOrders.tourName_cnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettourName_cnNull() {
                this[this.tableNewOrders.tourName_cnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTourDayNull() {
                return this.IsNull(this.tableNewOrders.TourDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTourDayNull() {
                this[this.tableNewOrders.TourDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstartDateNull() {
                return this.IsNull(this.tableNewOrders.startDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstartDateNull() {
                this[this.tableNewOrders.startDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AgentReceivablesRow : global::System.Data.DataRow {
            
            private AgentReceivablesDataTable tableAgentReceivables;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AgentReceivablesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAgentReceivables = ((AgentReceivablesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int orderID {
                get {
                    return ((int)(this[this.tableAgentReceivables.orderIDColumn]));
                }
                set {
                    this[this.tableAgentReceivables.orderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int agentID {
                get {
                    try {
                        return ((int)(this[this.tableAgentReceivables.agentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agentID\' in table \'AgentReceivables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentReceivables.agentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal agentReceivable {
                get {
                    try {
                        return ((decimal)(this[this.tableAgentReceivables.agentReceivableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agentReceivable\' in table \'AgentReceivables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentReceivables.agentReceivableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal agentPaid {
                get {
                    try {
                        return ((decimal)(this[this.tableAgentReceivables.agentPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agentPaid\' in table \'AgentReceivables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentReceivables.agentPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime orderClosedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAgentReceivables.orderClosedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orderClosedDate\' in table \'AgentReceivables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentReceivables.orderClosedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string companyName {
                get {
                    try {
                        return ((string)(this[this.tableAgentReceivables.companyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'companyName\' in table \'AgentReceivables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentReceivables.companyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string companyName_cn {
                get {
                    try {
                        return ((string)(this[this.tableAgentReceivables.companyName_cnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'companyName_cn\' in table \'AgentReceivables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentReceivables.companyName_cnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string username {
                get {
                    try {
                        return ((string)(this[this.tableAgentReceivables.usernameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'username\' in table \'AgentReceivables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentReceivables.usernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte status {
                get {
                    try {
                        return ((byte)(this[this.tableAgentReceivables.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'AgentReceivables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentReceivables.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal additionalDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableAgentReceivables.additionalDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'additionalDiscount\' in table \'AgentReceivables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentReceivables.additionalDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime reportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAgentReceivables.reportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reportDate\' in table \'AgentReceivables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentReceivables.reportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int invoiceID {
                get {
                    return ((int)(this[this.tableAgentReceivables.invoiceIDColumn]));
                }
                set {
                    this[this.tableAgentReceivables.invoiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal balance {
                get {
                    try {
                        return ((decimal)(this[this.tableAgentReceivables.balanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'balance\' in table \'AgentReceivables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentReceivables.balanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsagentIDNull() {
                return this.IsNull(this.tableAgentReceivables.agentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetagentIDNull() {
                this[this.tableAgentReceivables.agentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsagentReceivableNull() {
                return this.IsNull(this.tableAgentReceivables.agentReceivableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetagentReceivableNull() {
                this[this.tableAgentReceivables.agentReceivableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsagentPaidNull() {
                return this.IsNull(this.tableAgentReceivables.agentPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetagentPaidNull() {
                this[this.tableAgentReceivables.agentPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsorderClosedDateNull() {
                return this.IsNull(this.tableAgentReceivables.orderClosedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetorderClosedDateNull() {
                this[this.tableAgentReceivables.orderClosedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscompanyNameNull() {
                return this.IsNull(this.tableAgentReceivables.companyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcompanyNameNull() {
                this[this.tableAgentReceivables.companyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscompanyName_cnNull() {
                return this.IsNull(this.tableAgentReceivables.companyName_cnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcompanyName_cnNull() {
                this[this.tableAgentReceivables.companyName_cnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsusernameNull() {
                return this.IsNull(this.tableAgentReceivables.usernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetusernameNull() {
                this[this.tableAgentReceivables.usernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableAgentReceivables.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableAgentReceivables.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadditionalDiscountNull() {
                return this.IsNull(this.tableAgentReceivables.additionalDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadditionalDiscountNull() {
                this[this.tableAgentReceivables.additionalDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreportDateNull() {
                return this.IsNull(this.tableAgentReceivables.reportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreportDateNull() {
                this[this.tableAgentReceivables.reportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbalanceNull() {
                return this.IsNull(this.tableAgentReceivables.balanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbalanceNull() {
                this[this.tableAgentReceivables.balanceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AgentBillsRow : global::System.Data.DataRow {
            
            private AgentBillsDataTable tableAgentBills;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AgentBillsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAgentBills = ((AgentBillsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime reportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAgentBills.reportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reportDate\' in table \'AgentBills\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentBills.reportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int orderCount {
                get {
                    try {
                        return ((int)(this[this.tableAgentBills.orderCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orderCount\' in table \'AgentBills\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentBills.orderCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal agentReceivable {
                get {
                    try {
                        return ((decimal)(this[this.tableAgentBills.agentReceivableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agentReceivable\' in table \'AgentBills\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentBills.agentReceivableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal agentPaid {
                get {
                    try {
                        return ((decimal)(this[this.tableAgentBills.agentPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agentPaid\' in table \'AgentBills\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentBills.agentPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreportDateNull() {
                return this.IsNull(this.tableAgentBills.reportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreportDateNull() {
                this[this.tableAgentBills.reportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsorderCountNull() {
                return this.IsNull(this.tableAgentBills.orderCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetorderCountNull() {
                this[this.tableAgentBills.orderCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsagentReceivableNull() {
                return this.IsNull(this.tableAgentBills.agentReceivableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetagentReceivableNull() {
                this[this.tableAgentBills.agentReceivableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsagentPaidNull() {
                return this.IsNull(this.tableAgentBills.agentPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetagentPaidNull() {
                this[this.tableAgentBills.agentPaidColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AgentTotalRow : global::System.Data.DataRow {
            
            private AgentTotalDataTable tableAgentTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AgentTotalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAgentTotal = ((AgentTotalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int agentID {
                get {
                    try {
                        return ((int)(this[this.tableAgentTotal.agentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agentID\' in table \'AgentTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentTotal.agentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal agentReceivable {
                get {
                    try {
                        return ((decimal)(this[this.tableAgentTotal.agentReceivableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agentReceivable\' in table \'AgentTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentTotal.agentReceivableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal additionalDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableAgentTotal.additionalDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'additionalDiscount\' in table \'AgentTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentTotal.additionalDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal agentPaid {
                get {
                    try {
                        return ((decimal)(this[this.tableAgentTotal.agentPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agentPaid\' in table \'AgentTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentTotal.agentPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string companyName {
                get {
                    try {
                        return ((string)(this[this.tableAgentTotal.companyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'companyName\' in table \'AgentTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentTotal.companyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string companyName_cn {
                get {
                    try {
                        return ((string)(this[this.tableAgentTotal.companyName_cnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'companyName_cn\' in table \'AgentTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentTotal.companyName_cnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsagentIDNull() {
                return this.IsNull(this.tableAgentTotal.agentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetagentIDNull() {
                this[this.tableAgentTotal.agentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsagentReceivableNull() {
                return this.IsNull(this.tableAgentTotal.agentReceivableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetagentReceivableNull() {
                this[this.tableAgentTotal.agentReceivableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadditionalDiscountNull() {
                return this.IsNull(this.tableAgentTotal.additionalDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadditionalDiscountNull() {
                this[this.tableAgentTotal.additionalDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsagentPaidNull() {
                return this.IsNull(this.tableAgentTotal.agentPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetagentPaidNull() {
                this[this.tableAgentTotal.agentPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscompanyNameNull() {
                return this.IsNull(this.tableAgentTotal.companyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcompanyNameNull() {
                this[this.tableAgentTotal.companyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscompanyName_cnNull() {
                return this.IsNull(this.tableAgentTotal.companyName_cnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcompanyName_cnNull() {
                this[this.tableAgentTotal.companyName_cnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NewOrdersRowChangeEvent : global::System.EventArgs {
            
            private NewOrdersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NewOrdersRowChangeEvent(NewOrdersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NewOrdersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AgentReceivablesRowChangeEvent : global::System.EventArgs {
            
            private AgentReceivablesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentReceivablesRowChangeEvent(AgentReceivablesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentReceivablesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AgentBillsRowChangeEvent : global::System.EventArgs {
            
            private AgentBillsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentBillsRowChangeEvent(AgentBillsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentBillsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AgentTotalRowChangeEvent : global::System.EventArgs {
            
            private AgentTotalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTotalRowChangeEvent(AgentTotalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTotalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.Omei.DLL.DS_AgentTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NewOrdersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NewOrdersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NewOrders";
            tableMapping.ColumnMappings.Add("orderID", "orderID");
            tableMapping.ColumnMappings.Add("scheduleID", "scheduleID");
            tableMapping.ColumnMappings.Add("firstName", "firstName");
            tableMapping.ColumnMappings.Add("lastName", "lastName");
            tableMapping.ColumnMappings.Add("agentID", "agentID");
            tableMapping.ColumnMappings.Add("numberAdult", "numberAdult");
            tableMapping.ColumnMappings.Add("numberChild", "numberChild");
            tableMapping.ColumnMappings.Add("numberFree", "numberFree");
            tableMapping.ColumnMappings.Add("priceAdult", "priceAdult");
            tableMapping.ColumnMappings.Add("priceChild", "priceChild");
            tableMapping.ColumnMappings.Add("fare", "fare");
            tableMapping.ColumnMappings.Add("miscCharge", "miscCharge");
            tableMapping.ColumnMappings.Add("actualAmount", "actualAmount");
            tableMapping.ColumnMappings.Add("companyName", "companyName");
            tableMapping.ColumnMappings.Add("companyName_cn", "companyName_cn");
            tableMapping.ColumnMappings.Add("subtitle", "subtitle");
            tableMapping.ColumnMappings.Add("tourName", "tourName");
            tableMapping.ColumnMappings.Add("tourName_cn", "tourName_cn");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("TourDay", "TourDay");
            tableMapping.ColumnMappings.Add("startDate", "startDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.Omei.DLL.Properties.Settings.Default.OmeiTravelConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"select o.agentID, c.companyName, c.companyName_cn, 
	o.orderID, 
	o.scheduleID, s.subtitle, t.tourName, t.tourName_cn, t.TourDay, s.startDate,
	o.firstName, o.lastName,
	numberAdult, numberChild, numberFree, 
	o.priceAdult, o.priceChild, 
	fare, miscCharge, actualAmount, o.status
from orders as o
	left join company as c on o.agentID=c.companyID
	left join busSchedule as s on o.scheduleID=s.scheduleID
	left join tours as t on s.tourID=t.tourID
where agentID>0 and toAgent=0 and o.status<>7 and o.actualAmount>0
order by o.status desc, o.orderID desc
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DS_Agent.NewOrdersDataTable GetNewOrders() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DS_Agent.NewOrdersDataTable dataTable = new DS_Agent.NewOrdersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AgentReceivablesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AgentReceivablesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AgentReceivables";
            tableMapping.ColumnMappings.Add("orderID", "orderID");
            tableMapping.ColumnMappings.Add("agentID", "agentID");
            tableMapping.ColumnMappings.Add("agentReceivable", "agentReceivable");
            tableMapping.ColumnMappings.Add("agentPaid", "agentPaid");
            tableMapping.ColumnMappings.Add("orderClosedDate", "orderClosedDate");
            tableMapping.ColumnMappings.Add("companyName", "companyName");
            tableMapping.ColumnMappings.Add("companyName_cn", "companyName_cn");
            tableMapping.ColumnMappings.Add("username", "username");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("additionalDiscount", "additionalDiscount");
            tableMapping.ColumnMappings.Add("reportDate", "reportDate");
            tableMapping.ColumnMappings.Add("invoiceID", "invoiceID");
            tableMapping.ColumnMappings.Add("balance", "balance");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.Omei.DLL.Properties.Settings.Default.OmeiTravelConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT a.invoiceID, a.orderID, o.firstName+'.'+o.lastName as username,
 a.agentID, a.agentReceivable, a.additionalDiscount, a.agentPaid, 
a.agentReceivable-a.additionalDiscount-agentPaid as balance,
a.orderClosedDate, a.reportDate,
      c.companyName, c.companyName_cn, a.status
FROM AgentOrders AS a LEFT OUTER JOIN
      Company AS c ON a.agentID = c.companyId
left join orders as o on a.orderID=o.orderID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DS_Agent.AgentReceivablesDataTable GetAllAgentReceivables() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DS_Agent.AgentReceivablesDataTable dataTable = new DS_Agent.AgentReceivablesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AgentBillsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AgentBillsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AgentBills";
            tableMapping.ColumnMappings.Add("reportDate", "reportDate");
            tableMapping.ColumnMappings.Add("orderCount", "orderCount");
            tableMapping.ColumnMappings.Add("agentReceivable", "agentReceivable");
            tableMapping.ColumnMappings.Add("agentPaid", "agentPaid");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.Omei.DLL.Properties.Settings.Default.OmeiTravelConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select reportDate, count(*) as orderCount, sum(agentReceivable) as agentReceivabl" +
                "e, sum(agentPaid) as agentPaid\r\nfrom agentOrders\r\nwhere agentID=@agentID and sta" +
                "tus>1\r\ngroup by reportDate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agentID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "agentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DS_Agent.AgentBillsDataTable GetAgentBills(global::System.Nullable<int> agentID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((agentID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(agentID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            DS_Agent.AgentBillsDataTable dataTable = new DS_Agent.AgentBillsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AgentTotalTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AgentTotalTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AgentTotal";
            tableMapping.ColumnMappings.Add("agentID", "agentID");
            tableMapping.ColumnMappings.Add("agentReceivable", "agentReceivable");
            tableMapping.ColumnMappings.Add("additionalDiscount", "additionalDiscount");
            tableMapping.ColumnMappings.Add("agentPaid", "agentPaid");
            tableMapping.ColumnMappings.Add("companyName", "companyName");
            tableMapping.ColumnMappings.Add("companyName_cn", "companyName_cn");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.Omei.DLL.Properties.Settings.Default.OmeiTravelConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"select agentID, agentReceivable, additionalDiscount, agentPaid, companyName, companyName_cn
from (
	select 
		agentID, 
		sum(agentReceivable) as agentReceivable, 
		sum(additionalDiscount) as additionalDiscount, 
		sum(agentPaid) as agentPaid 
	from agentOrders as a
	where status<7
	group by agentID
) as a
	left join company as c on a.agentID=c.companyId
where a.agentReceivable>0";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DS_Agent.AgentTotalDataTable GetAgentTotal() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DS_Agent.AgentTotalDataTable dataTable = new DS_Agent.AgentTotalDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591